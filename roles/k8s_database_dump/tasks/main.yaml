---

# Check initial conditions

- name: Check variables
  ansible.builtin.assert:
    that:
    - kdd_db_kubeconfig | string | length > 0
    - kdd_db_namespace | string | length > 0
    - kdd_db_database | string | length > 0
    - kdd_db_local_port | string | length > 0

# Set an error message,
# used by other task files.

- name: Clear error message
  ansible.builtin.set_fact:
    kdd_db_error_message: undefined

# Use kubectl to port-forward to the database pod.
# We also get the process ID so we can use that to kill it when we're done.

- name: Run kubectl port-forward
  ansible.builtin.include_role:
    name: k8s_kubectl
    tasks_from: port-forward.yaml
  vars:
    ktl_kubeconfig: "{{ kdd_db_kubeconfig }}"
    ktl_namespace: "{{ kdd_db_namespace }}"
    ktl_pod: "{{ kdd_db_pod }}"
    ktl_local_port: "{{ kdd_db_local_port }}"
    ktl_pod_port: "{{ kdd_db_pod_port }}"
    ktl_port_forward_time_seconds: "{{ kdd_db_port_forward_time_minutes | int * 60 }}"

- name: Check pg_dump
  ansible.builtin.include_tasks: check-pg-dump.yaml

- name: Dump database
  ansible.builtin.include_tasks: dump-database.yaml
  when: k8s_database_dump_version_ok

# Always kill the async command

- name: Kill kubectl command
  ansible.builtin.include_role:
    name: k8s_kubectl
    tasks_from: kill.yaml
  vars:
    ktl_pid: "{{ k8s_kubectl_pid }}"
  when: not ansible_check_mode

# Copy the dump file to S3?

- name: Copy to S3
  ansible.builtin.include_tasks: to-s3.yaml
  vars:
    s3_bucket: "{{ kdd_db_s3_bucket }}"
    s3_bucket_directory: "{{ kdd_db_s3_bucket_directory }}"
    s3_src: "{{ dump_file }}"
  when:
  - kdd_db_s3_bucket | string | length > 0
  - not ansible_check_mode
  - k8s_database_dump_version_ok

# Report success or failure

- name: Assert success
  ansible.builtin.assert:
    that:
    - kdd_dump_success is defined
    - kdd_dump_success
    fail_msg: >-
      Dump of the '{{ kdd_db_database }}' database failed.
      Error is '{{ kdd_db_error_message }}'

- name: Stat the written file
  ansible.builtin.stat:
    path: "{{ dump_file }}"
  register: dump_file_stat

- name: Display summary
  ansible.builtin.debug:
    msg:
    - The '{{ kdd_db_database }}' database has been dumped to '{{ dump_file }}'
    - Size {{ ansible_check_mode | ternary(0, dump_file_stat.stat.size) }} bytes
